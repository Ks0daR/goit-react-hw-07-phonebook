{"version":3,"sources":["components/Contacts/ContactListItem/ContactIlstItem.module.css","components/Contacts/Contacts.module.css","components/Layout/Layout.module.css","components/Loader/Loader.module.css","components/FilterForm/FilterForm.module.css","components/InputForm/InputForm.module.css","components/Header/Header.module.css","redux/theme/themeActions.js","redux/theme/themeReduser.js","redux/phoneBook/phoneBookActions.js","redux/phoneBook/phoneBookReducer.js","redux/store.js","redux/theme/themeSelectors.js","components/Header/Header.js","components/Layout/Layout.js","components/Loader/Loader.js","redux/phoneBook/phoneBookSelectors.js","redux/phoneBook/phoneBookOperations.js","components/InputForm/InputForm.js","components/Contacts/ContactListItem/ContactListItem.js","components/Contacts/Contacts.js","components/FilterForm/FilterForm.js","pages/PhoneBookPage.js","components/App.js","index.js"],"names":["module","exports","toggleTheme","createAction","theme","createReducer","state","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","contactsBase","payload","filter","element","id","type","loader","error","combineReducers","store","configureStore","reducer","themeReducer","contacts","phoneBookReducer","getTheme","mapDispatchToProps","onToggle","connect","className","styles","Header","Title","TitleDark","Button","ButtonDark","onClick","TextDark","children","Layout","LayoutDark","App","Loader","color","height","width","timeout","Component","getLoader","getError","getContacts","getFilter","getVisibleContacts","createSelector","name","toLowerCase","includes","axios","defaults","baseURL","headers","common","post","InputForm","number","getInputValue","target","value","setState","hendleSubmit","e","preventDefault","checkedDoubleInput","alert","props","getInfo","some","contact","this","Form","onSubmit","placeholder","onChange","title","Submit","SubmitDark","dispatch","JSON","stringify","then","data","catch","ContactListItem","onRemove","ListElement","ListElementDark","elements","count","contactId","delete","list","length","map","key","onSearchQuery","filterValue","search","PhoneBookPage","errorMessage","Object","keys","get","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9868e20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListElement\":\"ContactIlstItem_ListElement__x1LIX\",\"ListElementDark\":\"ContactIlstItem_ListElementDark__3ivpS ContactIlstItem_ListElement__x1LIX\",\"Button\":\"ContactIlstItem_Button__1pt7q\",\"ButtonDark\":\"ContactIlstItem_ButtonDark__2xnrt ContactIlstItem_Button__1pt7q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__1RRdF\",\"Title\":\"Contacts_Title__1Y8Eo\",\"TitleDark\":\"Contacts_TitleDark__3s4ET Contacts_Title__1Y8Eo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2ocnZ\",\"LayoutDark\":\"Layout_LayoutDark__33Jxk Layout_Layout__2ocnZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__gRIKh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"FilterForm_search__2Irbb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"InputForm_Form__2dSOE\",\"Submit\":\"InputForm_Submit__2gxp4\",\"SubmitDark\":\"InputForm_SubmitDark__2GV6B InputForm_Submit__2gxp4\",\"Title\":\"InputForm_Title__12u6r\",\"TitleDark\":\"InputForm_TitleDark__Kxo9Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3L2c4\",\"Title\":\"Header_Title__3M7lD\",\"TitleDark\":\"Header_TitleDark__1gxrI Header_Header__3L2c4\",\"Button\":\"Header_Button__1UDbp\",\"ButtonDark\":\"Header_ButtonDark__32k8x Header_Button__1UDbp\",\"TextDark\":\"Header_TextDark__3xT9J\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst toggleTheme = createAction('theme/toggleTheme');\r\n\r\nexport { toggleTheme };\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { toggleTheme } from './themeActions';\r\n\r\nconst theme = createReducer(true, {\r\n  [toggleTheme]: state => !state,\r\n});\r\n\r\nexport default theme;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactsRequest = createAction('phoneBook/fetchContactsRequest');\r\nconst fetchContactsSuccess = createAction('phoneBook/fetchContactsSuccess');\r\nconst fetchContactsError = createAction('phoneBook/fetchContactsError');\r\n\r\nconst addContactRequest = createAction('phoneBook/addContactRequest');\r\nconst addContactSuccess = createAction('phoneBook/addContactSuccess');\r\nconst addContactError = createAction('phoneBook/addContactError');\r\n\r\nconst removeContactRequest = createAction('phoneBook/removeContactRequest');\r\nconst removeContactSuccess = createAction('phoneBook/removeContactSuccess');\r\nconst removeContactError = createAction('phoneBook/removeContactError');\r\n\r\nconst changeFilter = createAction('phoneBook/filtered');\r\n\r\nexport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  changeFilter,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  changeFilter,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n} from './phoneBookActions';\r\n\r\nconst contactsBase = createReducer([], {\r\n  [fetchContactsSuccess]: (state, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [removeContactSuccess]: (state, { payload }) =>\r\n    state.filter(element => payload !== element.id),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter.type]: (state, { payload }) => payload,\r\n});\r\n\r\nconst loader = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [removeContactRequest]: () => true,\r\n  [removeContactSuccess]: () => false,\r\n  [removeContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(\r\n  {},\r\n  {\r\n    [fetchContactsError]: (state, { payload }) => payload,\r\n    [addContactError]: (state, { payload }) => payload,\r\n    [removeContactError]: (state, { payload }) => payload,\r\n  },\r\n);\r\n\r\nexport default combineReducers({ contactsBase, filter, loader, error });\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport themeReducer from './theme/themeReduser';\r\nimport phoneBookReducer from './phoneBook/phoneBookReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: { theme: themeReducer, contacts: phoneBookReducer },\r\n});\r\n\r\nexport default store;\r\n","const getTheme = state => state.theme;\r\n\r\nexport { getTheme };\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toggleTheme } from '../../redux/theme/themeActions';\r\nimport { getTheme } from '../../redux/theme/themeSelectors';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = ({ theme, onToggle }) => (\r\n  <>\r\n    <div className={styles.Header}>\r\n      <h1 className={theme ? styles.Title : styles.TitleDark}>Phone Book</h1>\r\n    </div>\r\n    <button\r\n      className={theme ? styles.Button : styles.ButtonDark}\r\n      type=\"button\"\r\n      onClick={() => onToggle()}\r\n    >\r\n      {theme ? 'Dark' : 'Light'}\r\n    </button>\r\n    <p className={theme ? null : styles.TextDark}>\r\n      Active theme {theme ? 'Light' : 'Dark'}\r\n    </p>\r\n  </>\r\n);\r\n\r\nHeader.propTypes = {\r\n  theme: PropTypes.bool.isRequired,\r\n  onToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({ theme: getTheme(state) });\r\n\r\nconst mapDispatchToProps = {\r\n  onToggle: toggleTheme,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from 'react';\r\nimport Header from '../Header';\r\nimport { getTheme } from '../../redux/theme/themeSelectors';\r\nimport { connect } from 'react-redux';\r\nimport styles from './Layout.module.css';\r\n\r\nconst Layout = ({ children, theme }) => (\r\n  <div className={theme ? styles.Layout : styles.LayoutDark}>\r\n    <Header />\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({ theme: getTheme(state) });\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport styles from './Loader.module.css';\r\n\r\nexport default class App extends Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <Loader\r\n        className={styles.Loader}\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n    );\r\n  }\r\n}\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoader = state => state.contacts.loader;\r\n\r\nconst getError = state => state.contacts.error;\r\n\r\nconst getContacts = state => state.contacts.contactsBase;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter(element =>\r\n      element.name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n);\r\n\r\nexport { getVisibleContacts, getFilter, getLoader, getError, getContacts };\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n} from './phoneBookActions';\r\n\r\naxios.defaults.baseURL = 'http://goit-phonebook-api.herokuapp.com/v1/';\r\naxios.defaults.headers.common['Authorization'] =\r\n  'fbe9c05a-6813-409a-a679-7781d523ce31';\r\naxios.defaults.headers.post['Content-Type'] = 'application/json';\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', JSON.stringify({ name, number }))\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst removeContact = contactId => dispatch => {\r\n  dispatch(removeContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(removeContactSuccess(contactId)))\r\n    .catch(error => dispatch(removeContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nexport { addContact, removeContact, fetchContacts };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getTheme } from '../../redux/theme/themeSelectors';\r\nimport { getContacts } from '../../redux/phoneBook/phoneBookSelectors';\r\nimport { addContact } from '../../redux/phoneBook/phoneBookOperations';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './InputForm.module.css';\r\n\r\nclass InputForm extends Component {\r\n  static propTypes = {\r\n    theme: PropTypes.bool.isRequired,\r\n    getInfo: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  getInputValue = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  hendleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.checkedDoubleInput(this.state.name)) {\r\n      alert(`${this.state.name} есть в книге`);\r\n      return;\r\n    }\r\n    this.props.getInfo(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  checkedDoubleInput = name => {\r\n    return this.props.contacts.some(contact => contact.name === name);\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { theme } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <form className={styles.Form} onSubmit={this.hendleSubmit}>\r\n          <label>\r\n            <h3 className={theme ? styles.Title : styles.TitleDark}>Name:</h3>\r\n            <input\r\n              value={name}\r\n              placeholder=\"Enter name...\"\r\n              name=\"name\"\r\n              onChange={this.getInputValue}\r\n            />\r\n            <h3 className={theme ? styles.title : styles.TitleDark}>\r\n              Phone number:\r\n            </h3>\r\n            <input\r\n              value={number}\r\n              name=\"number\"\r\n              onChange={this.getInputValue}\r\n              placeholder=\"Enter phone...\"\r\n            />\r\n            <br />\r\n            <button\r\n              className={theme ? styles.Submit : styles.SubmitDark}\r\n              type=\"submit\"\r\n            >\r\n              Add contact\r\n            </button>\r\n            <br />\r\n          </label>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  theme: getTheme(state),\r\n  contacts: getContacts(state),\r\n});\r\nconst mapDispatchToProps = {\r\n  getInfo: addContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactIlstItem.module.css';\r\n\r\nfunction ContactListItem({ id, name, number, theme, onRemove }) {\r\n  return (\r\n    <li className={theme ? styles.ListElement : styles.ListElementDark}>\r\n      {name} {number}\r\n      <button\r\n        type=\"button\"\r\n        className={theme ? styles.Button : styles.ButtonDark}\r\n        onClick={() => onRemove(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  theme: PropTypes.bool.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport ContactListItem from './ContactListItem';\r\nimport { connect } from 'react-redux';\r\nimport { getTheme } from '../../redux/theme/themeSelectors';\r\nimport { getVisibleContacts } from '../../redux/phoneBook/phoneBookSelectors';\r\nimport { changeFilter } from '../../redux/phoneBook/phoneBookActions';\r\nimport { removeContact } from '../../redux/phoneBook/phoneBookOperations';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Contacts.module.css';\r\n\r\nconst Contacts = ({ elements, theme, onRemove }) => {\r\n  return (\r\n    <>\r\n      <h2 className={theme ? styles.Title : styles.TitleDark}>Contacts</h2>\r\n      <ul className={styles.list}>\r\n        {elements.length > 0\r\n          ? elements.map(({ id, name, number }) => (\r\n              <ContactListItem\r\n                key={id}\r\n                id={id}\r\n                name={name}\r\n                number={number}\r\n                onRemove={() => onRemove(id, elements.length)}\r\n                theme={theme}\r\n              />\r\n            ))\r\n          : null}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  elements: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  theme: getTheme(state),\r\n  elements: getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onRemove: (id, count) => {\r\n    if (count < 2) {\r\n      dispatch(changeFilter(''));\r\n    }\r\n    dispatch(removeContact(id));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  getContacts,\r\n  getFilter,\r\n} from '../../redux/phoneBook/phoneBookSelectors';\r\nimport { changeFilter } from '../../redux/phoneBook/phoneBookActions';\r\nimport styles from './FilterForm.module.css';\r\n\r\nfunction FilterForm({ filterValue, contacts, onSearchQuery }) {\r\n  if (contacts.length === 1) {\r\n    onSearchQuery();\r\n  }\r\n  return (\r\n    <label className={styles.search}>\r\n      {contacts.length > 1 && (\r\n        <input\r\n          value={filterValue}\r\n          onChange={e => onSearchQuery(e.target.value)}\r\n        />\r\n      )}\r\n    </label>\r\n  );\r\n}\r\n\r\nFilterForm.propTypes = {\r\n  filterValue: PropTypes.string.isRequired,\r\n  onSearchQuery: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filterValue: getFilter(state),\r\n  contacts: getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onSearchQuery: changeFilter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterForm);\r\n","import React from 'react';\r\nimport InputForm from '../components/InputForm';\r\nimport Contacts from '../components/Contacts';\r\nimport FilterForm from '../components/FilterForm';\r\n\r\nconst PhoneBookPage = () => {\r\n  return (\r\n    <>\r\n      <InputForm />\r\n      <FilterForm />\r\n      <Contacts />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PhoneBookPage;\r\n","import React, { Component } from 'react';\r\nimport Layout from './Layout';\r\nimport Loader from './Loader';\r\nimport { connect } from 'react-redux';\r\nimport { getLoader, getError } from '../redux/phoneBook/phoneBookSelectors';\r\nimport { fetchContacts } from '../redux/phoneBook/phoneBookOperations';\r\nimport PhoneBookPage from '../pages/PhoneBookPage';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.getContacts();\r\n  }\r\n  render() {\r\n    const errorMessage = Object.keys(this.props.error).length;\r\n    return (\r\n      <Layout>\r\n        {errorMessage && <h1>Ooops... Something went wrong</h1>}\r\n        {this.props.loader && <Loader />}\r\n        <PhoneBookPage />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loader: getLoader(state),\r\n  error: getError(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getContacts: fetchContacts,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}